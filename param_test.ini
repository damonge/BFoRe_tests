input_data_prefix= ../PySM/outdir/prefix_nu
input_noise_prefix= ../PySM/outdir/prefix_noisevar_nu
# Data and noise std maps will be read from files with names
#  <input_data_prefix>XXX.fits and  <input_noise_prefix>XXX.fits,
# where XXX is a zero-filled number starting at 001. The number
# of files should correspond to the number of lines in fname_nulist.
# Data units are assumed to be uK_RJ, and the noise std should be
# in uK_RJ/amin

input_mask_fname= mask_fname.fits
#Mask (nside=nside_spec) of pixels to be considered

input_beta_s_t_prior= prior_maps/prior_sync_const_1p0_ns16.fits
input_beta_s_p_prior= prior_maps/prior_sync_const_1p0_ns16.fits
input_beta_d_t_prior= prior_maps/prior_dust_const_nop_ns16.fits
input_beta_d_p_prior= prior_maps/prior_dust_const_nop_ns16.fits
input_temp_d_t_prior= prior_maps/prior_temp_const_nop_ns16.fits
input_temp_d_p_prior= prior_maps/prior_temp_const_nop_ns16.fits
# Each file should have two maps containing the center and width
# of the Gaussian prior on each of these parameters (in this order).
# Values in maps for unused parameters will not be used (but they
# still need to be provided).

output_prefix= test
# Output files will be written with prefix <output_prefix>

fname_nulist= ../PySM/outdir/prefix_characteristics.txt
# File containing the frequencies of each map. Frequencies in GHz

write_samples= 0
# Output individual samples?

include_polarization= 1
# Should I read Q and U from these files? Or just I?

include_cmb= 1
include_synchrotron= 1
include_dust= 1
# Set to 1 for the components you want to separate

independent_polarization= 1
# Should I assume independent spectral indices for intensity
# and polarization?

include_volume_prior= 1
# Will include a volume-effect prior on the spectral parameters

use_marginal_pdf= 1
# Will sample only indices from the marginal pdf

beta_s_free= 1
beta_d_free= 1
temp_d_free= 1
# Which of these parameters are free?

nu0_synchrotron= 23.
nu0_dust= 353.
# Frequencies at which dust and synchrotron should be output

nside= 256
# Sanity parameter, corresponding to the angular resolution
# of the input maps.

nside_spec= 16
# Resolution of the spectral parameter maps

seed= 1000
# Random seed 

n_samples= 20000
burning_fraction= 0.2
n_update_covar= 400
n_spec_resample= 10
n_output_rate= 200
beta_s_step= 1.
beta_d_step= 1.
temp_d_step= 1.
# MCMC parameters
# The way these parameters work:
#  - There will be
#       n_burn=n_samples*burning_fraction
#    steps during the burning period
#  - Of these, half will be spent trying
#    to get to a representative point in
#    the likelihood, and the other half
#    estimating the conditional covariance
#    of the spectral indices.
#  - Then, n_samples will be taken, but
#    the amplitudes will only be sampled
#    once in every n_spec_resample steps.
#  - The initial step of the MC is given
#    by beta_s_step, etc.

debug_pixel= 574
#debug_pixel= 1216
# When running in debug mode, all the
# information about debug_pixel will be
# output
